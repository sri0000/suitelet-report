/**
 * @NApiVersion 2.x
 * @NScriptType Suitelet
 */
define(["N/record", "N/render", "N/search", "N/runtime", "N/file", "N/format"], function (record, render, search, runtime, file, format) {
    function onRequest(context) {
        try {
            var rec_id = context.request.parameters.recordid;
            log.debug('rec_id', rec_id);
            if (!rec_id) {
                throw new Error("Record ID is missing from request parameters.");
            }
  
            // Load the invoice record using the rec_id
            var loadPO = record.load({
                type: 'customrecord_impal_wbt_sm_brch_rp',
                id: rec_id
            });
  
            var selectedBranch = loadPO.getValue({
                fieldId: 'custrecord_impal_brch'
            });
            log.debug("branch", selectedBranch);
  
            var selectedPeriod = loadPO.getText({
                fieldId: 'custrecord_impal_acc_pr'
            });
            log.debug("accountpr", selectedPeriod);
  
            var selectedPeriod1 = loadPO.getValue({
                fieldId: 'custrecord_impal_acc_pr'
            });
  
            if (selectedPeriod) {
                log.debug('if entered');
                var trimmedPeriod = selectedPeriod.trim();
                log.debug('trimmedPeriod', trimmedPeriod);
                var monthName = trimmedPeriod.split(' ')[6];  //["FY", "2024", ":", "Q1", "2024", ":", "May", "2023"]
                log.debug('monthName', monthName);
                var periodParts = selectedPeriod.trim().split(' ');
                log.debug('periodParts', periodParts);
                var monthNames = periodParts[6];
                log.debug('monthNames', monthNames);
                var year = parseInt(periodParts[7]);
                log.debug('year', year);
  
                var monthMap = {
                    'Jan': 0, 'Feb': 1, 'Mar': 2, 'Apr': 3,
                    'May': 4, 'Jun': 5, 'Jul': 6, 'Aug': 7,
                    'Sep': 8, 'Oct': 9, 'Nov': 10, 'Dec': 11
                };
  
                var monthNumber = monthMap[monthNames];
                var startDate = new Date(year, monthNumber, 1);
                log.debug("before formatting start date", startDate);
                var endDate = new Date(year, monthNumber + 1, 0);
                log.debug("before formatting end date", endDate);
  
                var formattedStartDate = format.format({
                    value: startDate,
                    type: format.Type.DATE
                });
                var formattedEndDate = format.format({
                    value: endDate,
                    type: format.Type.DATE
                });
                log.debug('Start Date:', formattedStartDate);
                log.debug('End Date:', formattedEndDate);
  
                log.debug('Trimmed Period:', trimmedPeriod);
                log.debug('Month Name:', monthName);
                log.debug('Year:', year);
  
                // Map month abbreviations to their corresponding fields
                var monthFieldMap = {
                    'Jan': 'custrecord_wbt_salesman_field_jan',
                    'Feb': 'custrecord_wbt_salesman_field_feb',
                    'Mar': 'custrecord_wbt_salesman_field_march',
                    'Apr': 'custrecord_wbt_salesman_field_april',
                    'May': 'custrecord_wbt_salesman_field_may',
                    'Jun': 'custrecord_wbt_salesman_field_june',
                    'Jul': 'custrecord_wbt_salesman_field_july',
                    'Aug': 'custrecord_wbt_salesman_field_august',
                    'Sep': 'custrecord_wbt_salesman_field_september',
                    'Oct': 'custrecord_wbt_salesman_field_october',
                    'Nov': 'custrecord_wbt_salesman_field_november',
                    'Dec': 'custrecord_wbt_salesman_field_december'
                };
                var monthField = monthFieldMap[monthName];
                log.debug('Month Field:', monthField);
  
                // Get today's date
                var today = format.format({
                    value: new Date(),
                    type: format.Type.DATE
                });
                log.debug('today',today)
                
                var internalIds = [];
                var source = search.create({
                    type: "customrecord_impal_wbt_salesman",
                    filters: [
                        ["custrecord_wbt_salesman_branch", "anyof", selectedBranch],
                        "AND",
                        ["custrecord_wbt_salesman_accounting_perio", "is", selectedPeriod1]
                    ],
                    columns: [ search.createColumn({ name: "internalid" }) ]
                });
 
                source.run().each(function(result) {
                    internalIds.push(result.getValue({ name: "internalid" }));
                    return true;
                });
                  log.debug('internalIds', internalIds);

                  var salesRepName = [];
                  var monthtotalArray = [];
                  var salesRepId= [];
                  for (var m = 0; m < internalIds.length; m++) {
                      var src_rec1 = record.load({
                          type: 'customrecord_impal_wbt_salesman',
                          id: internalIds[m]
                      });
                  
                      var monthValue = parseFloat(src_rec1.getValue({ fieldId: monthField })) || 0;
                      monthtotalArray.push(monthValue);
                      salesRepName.push(src_rec1.getText("custrecord_impal_sales_executive_m_s"));
                      salesRepId.push(src_rec1.getValue("custrecord_impal_sales_executive_m_s"));
                  }
                  
                  log.debug('Internal IDs length:', internalIds.length);
                  log.debug('Month Total Array:', monthtotalArray);
                  log.debug('Sales Rep Names Array:', salesRepName); // Logs the full array of sales rep names
                  if
                 (internalIds.length === 0) {       
                 log.debug("No valid sales reps found. Skipping further search.");            
                 // HTML content to display when no sales rep is found
                 var htmlContent ='<html><head><title>No Sales Rep Found</title></head><body>';          
                 htmlContent +='<h1>No Sales Rep Found for the given period.</h1>';   
                 htmlContent +='<p>Please check the details and try again.</p>';     
                 htmlContent +='</body></html>';            
                // Write the HTML response to the page
                context.response.write(htmlContent);
                return ;
                // Stop further search and processing if no valid sales reps found
                }
               // Use the existing salesRepId array to define salesRepIds dynamically
                var salesRepIds = salesRepId;

                // Initialize salesRepAmounts with 0 for each sales rep ID

                var salesRepAmounts = {}; // Object to map sales rep ID to amount

                salesRepIds.forEach(function(salesRepId) {
                    salesRepAmounts[salesRepId] = 0; // Default to 0 in case there is no data for the sales rep
                });

                var today_SalesRep_Amounts = {}; // Object to store sales rep ID and their amount
                var today_SalesRepName = {};   // Object to store sales rep ID and their names

                var invoiceSearchObj = search.create({
                type: "invoice",
                settings: [{ "name": "consolidationtype", "value": "ACCTTYPE" }],
                filters: [
                ["type", "anyof", "CustInvc"],
                "AND",
                ["salesrep", "anyof", salesRepIds],
                "AND",
                ["trandate", "on", today],
                ],
                columns: [
                search.createColumn({ name: "salesrep", summary: "GROUP", label: "Sales Rep ID" }),
                search.createColumn({ name: "entityid", join: "salesrep", summary: "GROUP", label: "Sales Rep Name" }),
                search.createColumn({ name: "amount", summary: "SUM", label: "Amount" })
                    ]
                });

                invoiceSearchObj.run().each(function(result) {
                var salesRepId = result.getValue({ name: "salesrep", summary: "GROUP" });
                var salesRepName = result.getValue({ name: "entityid", join: "salesrep", summary: "GROUP" });
                var totalAmountForRep = parseFloat(result.getValue({ name: "amount", summary: "SUM" })) || 0;

                // Store the sales rep's name and amount in respective objects
                today_SalesRepName[salesRepId] = salesRepName;
                today_SalesRep_Amounts[salesRepId] = totalAmountForRep;

                    return true;
                });

                log.debug("Sales Rep today amount", today_SalesRep_Amounts);


                //cum sales for the sales rep
                var salesRepAmounts = {};// Object to map sales rep ID to amount

                var invoiceSearchObj = search.create({
                    type: "invoice",
                    settings: [{ "name": "consolidationtype", "value": "ACCTTYPE" }],
                    filters: [
                        ["type", "anyof", "CustInvc"],
                        "AND",
                        ["salesrep", "anyof", salesRepIds],
                        "AND",
                        ["trandate", "within", formattedStartDate, formattedEndDate]
                       ],
                        columns: [
                        search.createColumn({ name: "salesrep", summary: "GROUP", label: "Sales Rep" }),
                        search.createColumn({ name: "amount", summary: "SUM", label: "Amount" })
                    ]
                });
                
                var searchResultCount = invoiceSearchObj.runPaged().count;
                log.debug("invoiceSearchObj result count", searchResultCount);
                
                // Run the search and populate salesRepAmounts
                invoiceSearchObj.run().each(function(result) {
                    var salesRepId = result.getValue({ name: "salesrep", summary: "GROUP" });
                    var totalAmountForRep = result.getValue({ name: "amount", summary: "SUM" }) || 0;
                  
                
                    // Store the amount for the corresponding sales rep ID
                    salesRepAmounts[salesRepId] = totalAmountForRep;
                

                    return true;
                });
                
                log.debug("Sales Rep Amounts", salesRepAmounts); // Logs amounts for each sales rep ID
                
                 // sales for the day for new dealers
                 var newDelDateCreationsalesAmounts = {};
                 var invoiceSearchObj = search.create({
                     type: "invoice",
                     settings: [{ "name": "consolidationtype", "value": "ACCTTYPE" }],
                     filters: [
                         ["type", "anyof", "CustInvc"],
                         "AND",
                         ["salesrep", "anyof", salesRepIds],
                         "AND",
                         ["trandate", "on", today],
                         "AND",
                         ["customer.custentity_customer_date_creations_", "is", "T"]
                     ],
                     columns: [
                         search.createColumn({ name: "salesrep", summary: "GROUP", label: "Sales Rep" }),
                         search.createColumn({ name: "amount", summary: "SUM", label: "Amount" })
                     ]
                 });
 
                 var searchResultCount = invoiceSearchObj.runPaged().count;
                 log.debug("invoiceSearchObj result count", searchResultCount);
 
                 // Run the search and populate newDelDateCreationsalesAmounts
                 invoiceSearchObj.run().each(function(result) {
                var salesRepId = result.getValue({ name: "salesrep", summary: "GROUP" });
                var totalAmountForRep = result.getValue({ name: "amount", summary: "SUM" }) || 0;
   
 
                // Store the amount for the corresponding sales rep ID
                newDelDateCreationsalesAmounts[salesRepId] = totalAmountForRep;
 

                     return true;
                 });
 
                 log.debug("Sales Rep Amounts", newDelDateCreationsalesAmounts); // Logs amounts for each sales rep ID

                 //new dealers date of creation monthly sales rep amount 
                   // sales for the month for new dealers
                   var cumNewDealersAmount = {};
                   var invoiceSearchObj = search.create({
                                       type: "invoice",
                       settings: [{ "name": "consolidationtype", "value": "ACCTTYPE" }],
                       filters: [
                           ["type", "anyof", "CustInvc"],
                           "AND",
                           ["salesrep", "anyof", salesRepIds],
                           "AND",
                           ["trandate", "within", formattedStartDate, formattedEndDate],
                           "AND",
                           ["customer.custentity_customer_date_creations_", "is", "T"]
                           ],
                       columns: [
                           search.createColumn({ name: "salesrep", summary: "GROUP", label: "Sales Rep" }),
                           search.createColumn({ name: "amount", summary: "SUM", label: "Amount" })
                       ]
                   });
   
                   var searchResultCount = invoiceSearchObj.runPaged().count;
                   log.debug("invoiceSearchObj result count", searchResultCount);
   
                   // Run the search and populate cumNewDealersAmount
                   invoiceSearchObj.run().each(function(result) {
                  var salesRepId = result.getValue({ name: "salesrep", summary: "GROUP" });
                  var totalAmountForRep = result.getValue({ name: "amount", summary: "SUM" }) || 0;
     
   
                  // Store the amount for the corresponding sales rep ID
                  cumNewDealersAmount[salesRepId] = totalAmountForRep;
   
  
                       return true;
                   });
   
                   log.debug("Sales Rep Amounts", cumNewDealersAmount); // Logs amounts for each sales rep ID

                   //search for the new product find the sales for the day
                      // sales for the day for new dealers
                 var newProdect = {};
                 var invoiceSearchObj = search.create({
                     type: "invoice",
                     settings: [{ "name": "consolidationtype", "value": "ACCTTYPE" }],
                     filters: [
                         ["type", "anyof", "CustInvc"],
                         "AND",
                         ["salesrep", "anyof", salesRepIds],
                         "AND",
                         ["trandate", "on", today],
                         "AND",
                         ["item.custitem_impal_new_product", "is", "T"]
                        ],
                     columns: [
                         search.createColumn({ name: "salesrep", summary: "GROUP", label: "Sales Rep" }),
                         search.createColumn({ name: "amount", summary: "SUM", label: "Amount" })
                     ]
                 });
 
                 var searchResultCount = invoiceSearchObj.runPaged().count;
                 log.debug("invoiceSearchObj result count", searchResultCount);
 
                 // Run the search and populate newProdect
                 invoiceSearchObj.run().each(function(result) {
                var salesRepId = result.getValue({ name: "salesrep", summary: "GROUP" });
                var totalAmountForRep = result.getValue({ name: "amount", summary: "SUM" }) || 0;
   
 
                // Store the amount for the corresponding sales rep ID
                newProdect[salesRepId] = totalAmountForRep;
 

                     return true;
                 });
 
                 log.debug("Sales Rep Amounts", newProdect); // Logs amounts for each sales rep ID

                    //search for the new product find the sales for the day
                      // sales for the day for new dealers
                      var cum_newProdect = {};
                      var invoiceSearchObj = search.create({
                          type: "invoice",
                          settings: [{ "name": "consolidationtype", "value": "ACCTTYPE" }],
                          filters: [
                              ["type", "anyof", "CustInvc"],
                              "AND",
                              ["salesrep", "anyof", salesRepIds],
                              "AND",
                              ["trandate", "within", formattedStartDate, formattedEndDate],
                              "AND",
                              ["item.custitem_impal_new_product", "is", "T"]
                             ],
                          columns: [
                              search.createColumn({ name: "salesrep", summary: "GROUP", label: "Sales Rep" }),
                              search.createColumn({ name: "amount", summary: "SUM", label: "Amount" })
                          ]
                      });
      
                      var searchResultCount = invoiceSearchObj.runPaged().count;
                      log.debug("invoiceSearchObj result count", searchResultCount);
      
                      // Run the search and populate cum_newProdect
                      invoiceSearchObj.run().each(function(result) {
                     var salesRepId = result.getValue({ name: "salesrep", summary: "GROUP" });
                     var totalAmountForRep = result.getValue({ name: "amount", summary: "SUM" }) || 0;
      
                     // Store the amount for the corresponding sales rep ID
                     cum_newProdect[salesRepId] = totalAmountForRep;

                          return true;
                      });
      
                      log.debug("Sales Rep Amounts", cum_newProdect); // Logs amounts for each sales rep ID
     
                function roundToTwoDecimals(value) {
                    return Math.round(value * 100) / 100;
                    }
                var workingDayForMOn = 26;
                var completedWorkDay = 1;
                var balance_For_day = 25;

                var avgDay =0;
                var avgDayTotal=0;
                var currentTargetTillDay =0;
                var currTarDayTotal =0;
                var sales_target_for = 0;
                var total_sales_target_for =0;
                var sales_plus_minus =0;
                var total_Sales_Plus_Minus =0;
                var salesVstarget = 0;
                var totalSalesVstarget = 0;

                //second table variables
                var targetFor6Percent =0;
                var newDealersTotalForDay =0;
                var cumNewDealerTotal=0;
                //3rd table variable
                var target_15_0f_sales = 0;
                var target_15_total= 0;
                var newProSalesForDayTotal = 0;
                var cumNewProductTotal = 0;
                var totalPerSales =0;
                var perSalesAchivedvsTarget = 0; // Initialize to avoid undefined values

                var tr ='';
                var td ='';
                var tr2 = '';
                var td2 = '';

                var serialNumber = 1;


                var forTheMonth=0;
                //total amount for first tablesales rep
                var monthTotal = 0;
                var todayCalAmount = 0;
                var cumMonTotalAmount = 0;
                var cum_amt_total =0;
                var total_cum_amt_percentage =0;
                

                for (var i = 0; i < internalIds.length; i++) {
                    //first table sales
                    forTheMonth =monthtotalArray[i]
                    monthTotal += forTheMonth
                    var salesRepId = salesRepIds[i];
                    var today_AmountForRep = parseFloat(today_SalesRep_Amounts[salesRepId] )|| 0;
                    todayCalAmount += today_AmountForRep;
                    var salesRepId = salesRepIds[i];
                    var cum_AmountForRep = parseFloat(salesRepAmounts[salesRepId]) || 0;
                    cumMonTotalAmount += cum_AmountForRep;
                    var salesManName = today_SalesRepName[salesRepId];


                    //second table sales
                     var newDealersFotDay = parseFloat(newDelDateCreationsalesAmounts[salesRepId]) || 0;
                     newDealersTotalForDay += newDealersFotDay; 

                     var cumNewDealers = parseFloat(cumNewDealersAmount[salesRepId]) || 0;
                     cumNewDealerTotal += cumNewDealers; 

                    cum_amt_total = cum_AmountForRep ? roundToTwoDecimals(cum_AmountForRep / cumMonTotalAmount) : 0;
                    total_cum_amt_percentage += roundToTwoDecimals(cum_amt_total);

                     //calculation part variables
                      avgDay=roundToTwoDecimals(monthtotalArray[i]/workingDayForMOn)||0;
                      avgDayTotal += roundToTwoDecimals(avgDay);

                      currentTargetTillDay =  roundToTwoDecimals(avgDay*completedWorkDay)||0;
                      currTarDayTotal +=roundToTwoDecimals(currentTargetTillDay);
                    
                      sales_target_for = roundToTwoDecimals((forTheMonth-cum_AmountForRep)/balance_For_day)||0;
                      total_sales_target_for +=roundToTwoDecimals(sales_target_for);
                      
                      sales_plus_minus =  roundToTwoDecimals(cum_AmountForRep - currentTargetTillDay)||0;
                      total_Sales_Plus_Minus += roundToTwoDecimals(sales_plus_minus);
                    
                      salesVstarget = roundToTwoDecimals(cum_AmountForRep/forTheMonth) ||0;
                      totalSalesVstarget += salesVstarget;


                      td = '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">' + serialNumber + '</td>' +
                      '<td align ="left" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">' + salesRepName[i] + '</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal; background-color: rgb(239, 239, 238);">'+forTheMonth+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">'+avgDay+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">'+currentTargetTillDay+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">'+sales_target_for+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;  background-color: rgb(137, 211, 127)">'+today_AmountForRep+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;  background-color: rgb(137, 211, 127)">' + cum_AmountForRep + '</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">'+sales_plus_minus+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">'+salesVstarget+'%'+'</td>' +
                      '<td align ="center" style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal; vertical-align: middle; letter-spacing: normal;">'+cum_amt_total+'%'+'</td>';
             
           tr += '<tr>' + td + '</tr>';  
           
          
           
           target_15_0f_sales = (forTheMonth*15)/100;
           target_15_total += target_15_0f_sales;

           var newProductSalesForDay = parseFloat(newProdect[salesRepId]) || 0;
           newProSalesForDayTotal += newProductSalesForDay;

           var cum_newProductMonth = parseFloat(cum_newProdect[salesRepId]) || 0;
           cumNewProductTotal += cum_newProductMonth;


           if (cum_newProductMonth !== 0) { 
            perSalesAchivedvsTarget = target_15_0f_sales / cum_newProductMonth;
        } else {
            perSalesAchivedvsTarget = 0; // Default to 0 if division is not possible
        }
        
        totalPerSales += perSalesAchivedvsTarget; // Add to total

             // new product sales report
             td2 =  '<td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;">'+serialNumber+'</td>' +
             '<td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;">'+salesRepName[i]+'</td>'+
             '<td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;">'+target_15_0f_sales+'</td>'+
             '<td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;">'+newProductSalesForDay+'</td>'+
             '<td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;">'+cum_newProductMonth+'</td>'+
             '<td border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;">'+perSalesAchivedvsTarget+'</td>'

             tr2 += '<tr style="width: 10%;height:2%;">'+ td2 + '</tr>';
           serialNumber++;
        
            }

            targetFor6Percent = (total_sales_target_for/100)*6;

            log.debug('newDealersTotalForDay',newDealersTotalForDay)
            
            
        }
                var xmlTemplateFile= '<?xml version="1.0"?>\
<!DOCTYPE pdf PUBLIC "-//big.faceless.org//report" "report-1.1.dtd">\
<pdf>\
<head>\
</head>\
<body style="font-family: Arial, sans-serif; font-size: 11px; margin: 0; padding: 20px; width: 250mm; height: 297mm;">\
 <!-- First Table -->\
        <table border="1" style="width: 100%; border-collapse: collapse; margin-bottom: 15px; ">\
          <tr border-bottom="1"  style="background-color: white;width: 10%;height:2%;">\
            <td border-right="1" style=" width: 15px;height:10px; padding: 4px;color:black; font-weight: bold; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">\WBT 4.2</td>\
             <td border-right="1" colspan="8" style=" width:15px;height:10px;background-color: red; color: white; padding: 4px; font-weight: bold; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">\WHITE BOARD TRACKER</td>\
             <td colspan="2" style="width: 15px;height:10px;background-color: #4CAF50; color: black;padding: 4px; font-weight: bold; font-style: normal; letter-spacing: normal;align: center; vertical-align: middle;">'+monthNames+'</td>\
          </tr>\
          <tr border="1" border-top="none" style="border-bottom:none;background-color: #f2f2f2;color:black;width: 10%;height:2%;">\
            <td border-right="1"  border-top="none" style="  width: 15px;height:10px; padding: 4px;  font-weight: normal; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">'+monthNames+'</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px; padding: 4px;  background-color:white ; font-weight: bold; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">BRANCH NAME</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px;  padding: 4px;  background-color:white ; background-color:white ; background-color:white ; font-weight: normal; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">\Working days for month</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px;  padding: 4px;  align: center; font-weight: normal; font-style: normal; letter-spacing: normal; vertical-align: middle;">26</td>\
            <td border-right="1" border-top="none"  style="  width: 15px;height:10px;  padding: 4px;  background-color:white ;font-weight: normal; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">Standup meeting working day</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px; padding: 4px;  background-color: #4CAF50;align: center; font-weight: normal; font-style: normal; letter-spacing: normal; vertical-align: middle;">1</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px; padding: 4px;  background-color:white ;font-weight: normal; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">Completed working days</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px; padding: 4px;   background-color: #4CAF50;align: center; font-weight: normal; font-style: normal; letter-spacing: normal; vertical-align: middle;">1</td>\
            <td border-right="1" border-top="none" style="  width: 15px;height:10px; padding: 4px;  background-color:white ;font-weight: normal; font-style: normal; letter-spacing: normal; align: center; vertical-align: middle;">Balance days for month</td>\
            <td border-top="none"  style="width: 15px;height:10px; padding: 4px;  background-color:white ;align: center; font-weight: normal; font-style: normal; letter-spacing: normal; vertical-align: middle;">25</td>\
          </tr>\
        </table>\
<!-- Second Table -->\
<table style="width: 100%; border-collapse: collapse;">\
  <!-- Header Row -->\
  <tr style="background-color: #4CAF50; color: white;">\
    <td colspan="11" style="align:center;border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; color: white;  background-color: rgb(108, 102, 218)">Sales</td>\
  </tr>\
  <!-- Sub-header Rows -->\
  <tr style="background-color: #f9f9f9;">\
    <td rowspan="2" style="border: 1px solid black;background-color: #f2f2f2; padding: 4px; font-weight: bold; font-style: normal; text-align: center; vertical-align: middle; letter-spacing: normal; background-color: rgb(255, 238, 192);">SI.No</td>\
    <td rowspan="2" style="border: 1px solid black; background-color: #f2f2f2;padding: 4px; font-weight: bold; font-style: normal; text-align: center; vertical-align: middle; letter-spacing: normal; background-color: rgb(255, 238, 192);">Sales Executive M/s</td>\
    <td align ="center" colspan="4" style="border: 1px solid black; padding: 4px;color: white; font-weight: bold; font-style: normal; vertical-align: middle; letter-spacing: normal;background-color: rgb(255, 9, 17)">Target Lacs</td>\
    <td align ="center"  colspan="3" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal; vertical-align: middle; letter-spacing: normal; color: white;  background-color: rgb(108, 102, 218)">Sales Lacs</td>\
    <td align ="center" colspan="3" style="border: 1px solid black; padding: 4px;  font-weight: bold; font-style: normal; vertical-align: middle; letter-spacing: normal; color: white;  background-color: rgb(108, 102, 218)">Cum % of Sales</td>\
  </tr>\
  <tr style="background-color: #f2f2f2;">\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">For the Month</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Avg/Day</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Cum Target till Date-(Avg/Day)</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Sales Target for</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Sales for the Day</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Cumulative sales as of</td>\
    <td style="border: 1px solid black; padding:4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Sales Cumulative Plus/Minus</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Sales vs Target</td>\
    <td style="border: 1px solid black; padding: 4px; text-align: center; font-weight: bold; font-style: normal; letter-spacing: normal; vertical-align: middle; background-color: rgb(255, 238, 192);">Cus Salesmen Share</td>\
  </tr>\
  <!-- Rows with Date Values -->\
  <!-- items map -->\
   '+tr+'\
    <!-- total map -->\
      <tr>\
    <td  style="border: 1px solid black; padding: 4px; font-weight: normal; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">\</td>\
    <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\Total</td>\
      <td align = "center" style="border: 1px solid black; padding:4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+monthTotal+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+avgDayTotal+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+currTarDayTotal+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+total_sales_target_for+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+todayCalAmount+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+cumMonTotalAmount+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+total_Sales_Plus_Minus+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+totalSalesVstarget+'%'+'</td>\
      <td align = "center" style="border: 1px solid black; padding: 4px; font-weight: bold; font-style: normal;text-align: center; vertical-align: middle; letter-spacing: normal;">'+total_cum_amt_percentage+'%'+'</td>\
  </tr>\
  </table>\
  <table  style="width: 100%; border-collapse: collapse; font-family: Arial, sans-serif; font-size: 11px;top:1%;">\
        <tr style="width: 10%;height:2%;">\
          <td  border="1" border-right="1" colspan="3" style="width: 15px;height:10px;font-weight: bold; background-color: red; color: white;  padding: 8px;align: center;  font-weight: bold; font-style: normal;vertical-align: middle; letter-spacing: normal;">NEW DEALERS` SALES - TARGET 6% OF SALES</td>\
        </tr>\
        <tr >\
          <td  style="width: 50%;">\
            <table border="1" style="width: 100%; border-collapse: collapse;margin-top:-2%;">\
              <tr style="width: 10%;height:2%;">\
                <td border-bottom="1" colspan="4" style="width: 15px;height:10px;background-color: rgb(108, 102, 218); color: white;  padding: 8px;align: center;font-weight: bold; font-style: normal;vertical-align: middle; letter-spacing: normal;">NEW DEALERS` SALES REPORT - Lacs for this month</td>\
              </tr >\
              <tr style="background-color: rgb(255, 238, 192);width: 10%;height:2%;">\
                <td border-bottom="1" border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; vertical-align: middle; letter-spacing: normal;">Target 6% of sales for the day</td>\
                <td border-bottom="1" border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal;vertical-align: middle; letter-spacing: normal;">New Dealers` Sales for the day</td>\
                <td border-bottom="1" border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal;vertical-align: middle; letter-spacing: normal;">Cumulative New Dealer Sales</td>\
                <td border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; vertical-align: middle; letter-spacing: normal;">% sales achieved Vs target</td>\
              </tr>\
              <tr style="width: 10%;height:2%;">\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: normal; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">'+targetFor6Percent+'</td>\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: normal; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">'+newDealersTotalForDay+'</td>\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px;align: center;font-weight: normal; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">'+cumNewDealerTotal+'</td>\
                <td style="width: 15px;height:10px;  padding: 6px;align: center;font-weight: normal; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">86.7%</td>\
              </tr>\
            </table>\
          </td>\
          <td style="width: 15px;height:10px;">\</td>\ <!-- Empty column for spacing -->\
          <td style="width: 50%;">\
            <table border="1" style="width: 100%; border-collapse: collapse;">\
              <tr style="background-color: rgb(108, 102, 218); color: white;width: 10%;height:2%;">\
                <td border-bottom="1" colspan="4" style="width: 15px;height:10px;color: white; font-weight: bold; padding: 8px;align: center;font-weight: bold; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">\CUM. NEW DEALERS` SALES REPORT - Lacs for this month (till this month)</td>\
              </tr>\
              <tr style="background-color: rgb(255, 238, 192);width: 10%;height:2%;">\
                <td border-right="1"  style="width: 15px;height:10px;  padding: 6px;align: center;font-weight: bold; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">Cum.Branch Sales till last month</td>\
                <td  border-right="1"   style="width: 15px;height:10px;  padding: 6px;align: center;font-weight: bold; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">New Dealers` Sales Target</td>\
                <td  border-right="1"   style="width: 15px;height:10px;  padding: 6px;align: center;font-weight: bold; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">New Dealer Sales</td>\
                <td style="width: 15px;height:10px;  padding: 6px;align: center;font-weight: bold; font-style: normal;align: center; vertical-align: middle; letter-spacing: normal;">% sales achieved Vs target</td>\
              </tr>\
              <tr style="width: 10%;height:2%;">\
                <td border-right="1"  style="width: 15px;height:10px;  padding: 6px; align: center;">0.00</td>\
                <td border-right="1"  style="width: 15px;height:10px;  padding: 6px; align: center;">0.00</td>\
                <td border-right="1"  style="width: 15px;height:10px;  padding: 6px; align: center;">0.00</td>\
                <td style="width: 15px;height:10px;  padding: 6px;align: center;">#DIV/0!</td>\
              </tr>\
            </table>\
          </td>\
        </tr>\
      </table>\
         <!-- last table -->\
          <table border="1"  style="width: 60%; margin-top:20px;border-collapse: collapse; ">\
              <tr style="width: 10%;height:2%;">\
                <td border-bottom="1" colspan="6" style="width: 15px;height:10px;background-color: rgb(108, 102, 218); color: white; font-weight: bold; padding: 8px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">NEW PRODUCT SALES  REPORT  ₹ Lacs</td>\
              </tr>\
             <tr>\
                <td colspan="6" style="width: 15px;height:10px;font-weight: bold; padding: 8px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\
                </td>\
              </tr>\
              <tr border-top="1" style="background-color: rgb(255, 238, 192);width: 10%;height:2%;">\
                <td border-right="1"  border-bottom="1"  style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\Sl No</td>\
                <td border-right="1"  border-bottom="1"  style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\Sales Executive M/s</td>\
                <td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\Target 15% of sales </td>\
                <td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\Sales for the day</td>\
                <td border-right="1"  border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\Cumulative sales</td>\
                <td border-bottom="1" style="width: 15px;height:10px;  padding: 6px; align: center;font-weight: bold; font-style: normal; align: center; vertical-align: middle; letter-spacing: normal;">\% sales achived Vs target</td>\
              </tr>\
             '+tr2+'\
              <tr style="width: 10%;height:2%;">\
                <td border-right="1"  style="width: 15px;height:10px;  padding: 6px; align: center;"></td>\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center; font-weight: bold;">Total</td>\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center; font-weight: bold;">'+target_15_total+'</td>\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center; font-weight: bold;">'+newProSalesForDayTotal+'</td>\
                <td  border-right="1" style="width: 15px;height:10px;  padding: 6px; align: center; font-weight: bold;">'+cumNewProductTotal+'</td>\
                <td style="width: 15px;height:10px;  padding: 6px; align: center; font-weight: bold;">'+totalPerSales+'</td>\
              </tr>\
            </table>\
</body>\
</pdf>';
// Create and configure the renderer
var renderer = render.create();
renderer.templateContent = xmlTemplateFile;
// Log renderer object for debugging
log.debug({
  title: "Renderer Object",
  details: renderer,
});

// Add record to renderer
renderer.addRecord("record", loadPO);
// Render PDF
var invoicePdf = renderer.renderAsPdf();

// Send the PDF as response
context.response.writeFile({
  file: invoicePdf,
  isInline: true,
});

      
}catch(error) {
log.error({
  title: "Error in Suitelet",
  details: error.message,
});

// Send error response to the user
context.response.write({
  output: "An error occurred: " + error.message,
}); 
}
}
return {
  onRequest: onRequest
 };
});
